{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/enviroment/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst URL = environment.url;\nconst token = localStorage.getItem('token') ?? '';\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(form) {\n    let direccion = `${URL}/api/Auth`;\n    return this.http.post(direccion, {\n      Email: form.Email,\n      Password: form.Password\n    });\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});\nexport class dataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getData() {\n    let direccion = `${URL}/api/Platforms`;\n    return this.http.get(direccion, {\n      headers: new HttpHeaders({\n        authorization: token\n      })\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,2BAA2B;;;AAKvD,MAAMC,GAAG,GAAGD,WAAW,CAACE,GAAG;AAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;AAKjD,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EACvCC,KAAK,CAACC,IAAW;IACf,IAAIC,SAAS,GAAG,GAAGV,GAAG,WAAW;IACjC,OAAO,IAAI,CAACO,IAAI,CAACI,IAAI,CAACD,SAAS,EAAE;MAC/BE,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,QAAQ,EAAEJ,IAAI,CAACI;KAChB,CAAC;EACJ;;AARWR,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAS,SAAVT,UAAU;EAAAU,YAFT;AAAM;AA6BpB,OAAM,MAAOC,WAAW;EACtBV,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCU,OAAO;IACL,IAAIP,SAAS,GAAG,GAAGV,GAAG,gBAAgB;IACtC,OAAO,IAAI,CAACO,IAAI,CAACW,GAAG,CAAYR,SAAS,EAAE;MACzCS,OAAO,EAAE,IAAIrB,WAAW,CAAC;QACvBsB,aAAa,EAAElB;OAChB;KACF,CAAC;EACJ","names":["HttpHeaders","environment","URL","url","token","localStorage","getItem","ApiService","constructor","http","login","form","direccion","post","Email","Password","factory","providedIn","dataService","getData","get","headers","authorization"],"sourceRoot":"","sources":["C:\\Users\\Raygust\\Desktop\\Renzo\\Prueba_Tecnica\\prueba_tecnica\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Login, Platforms, Response } from '../model/interfaces.interface';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/enviroment/enviroment';\nimport { Observable, map } from 'rxjs';\n\nimport { Data } from '../model/interfaces.interface';\n\nconst URL = environment.url;\nconst token = localStorage.getItem('token') ?? '';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n  login(form: Login): Observable<any> {\n    let direccion = `${URL}/api/Auth`;\n    return this.http.post(direccion, {\n      Email: form.Email,\n      Password: form.Password,\n    });\n  }\n\n  /*dashboard(): Observable<Platforms>{\n    let direccion = `${URL}/api/Platforms`\n    return this.http.get<Platforms>(direccion,{\n      headers : new HttpHeaders({\n        'authorization': token\n      })\n    }).pipe(\n      map((response: any) => {\n        const data: Platforms = {\n          data: response.data\n        };\n        return data;\n      })\n    );\n  }*/\n}\n\nexport class dataService {\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    let direccion = `${URL}/api/Platforms`;\n    return this.http.get<Platforms>(direccion, {\n      headers: new HttpHeaders({\n        authorization: token,\n      }),\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}